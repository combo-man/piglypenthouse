pico-8 cartridge // http://www.pico-8.com
version 16
__lua__

//vectors///////////////////////////
function vec_len(x,y)
   local x = x * 0x0.1
   local y = y * 0x0.1
   return sqrt((x*x)+(y*y)) * 0x010
end

function vec_sub(a,b)
   return a.x-b.x,a.y-b.y
end

function vec_add(a,b)
   return a.x+b.x,a.y+b.y
end

function vec_dist(a,b)
   return vec_len(vec_sub(a,b))
end

function vec_scale(a,v)
   return a.x*v,a.y*v
end

function rot_vec(x,y,r)
   local cs = cos(r)
   local sn = sin(r)
   local nx = x * cs - y * sn
   local ny = x * sn + y * cs
   return nx,ny
end

//easing///////////////////////////
function easein(t)
   return t*t 
end
function easout(t)
   return t*(2-t) 
end

function easeinout(t) 
   return t < 0.5 and 2*t*t or -1+(4-(2*t))*t 
end

//utils////////////////////////////
function cpy(obj)
   local n = {}
   for k,v in pairs(obj) do
      n[k] = v
   end
   return n
end

function clone(obj,para)
   local n = cpy(obj)
   for k,v in pairs(para) do
      n[k] = v
   end
   return n
end

function circ_col(a,b)
   return vec_dist(a,b) <= (a.r + b.r)
end

function move_obj(obj)
   if obj.grav then
      obj.dy += grav
   end
   obj.x += obj.dx
   obj.y += obj.dy
   obj.dx *= obj.rx
   obj.dy *= obj.ry
end

function col_objs(objs)
   for obj in all(objs) do
      obj.col = {}
   end
   for i=1,#objs do
      local a = objs[i]
      for j=1,#objs do
         local b = objs[j]
         if a.kin or b.kin then
            if circ_col(a,b) then
               add(a.col,b)
            end
         end 
      end
   end
end

//constants////////////////////////
grav = .1
clock = 0
objs = {}
//methods////////////////////////////
function ctrl_coin(coin)
   if btn(0) then
      coin.x -= coin.mv
   end
   if btn(1) then
      coin.x += coin.mv
   end
   for v in all(coin.col) do
      if v.catch then
         v:catch(coin)
         coin.active = false
         coin.kin = false
         coin.dead = true
      end
   end
end   

function l_coin_update(self)
   if self.timer <= 0 then
      self.dead = true
      self.active = false
      local ncoin = clone(
         coin,
         {
            x = self.x,
            y = self.y,
            dx = self.dx,
            dy = self.dy,
            active = true
         }
      )
      add(objs,ncoin)
   end
   self.timer -= 1
end

function min_coin_update(coin)
   if coin.timer <= 0 then
      coin.dead = true
   else
      coin.timer -= 1
   end
end

function pig_catch(pig, obj)
   pig.active = true
end

function pig_fire(pig)
   if btnp(5) then
      sfx(rnd() > .5 and 2 or 3)
      pig.active = false
      pig.dead = true
      local nx = pig.x + pig.aim_x * (pig.r + coin.r)
      local ny = pig.y + pig.aim_y * (pig.r + coin.r)
      local ncoin = clone(
         coin, 
         {
            x = nx,
            y = ny,
            dx = pig.aim_x * pig.fspeed,
            dy = pig.aim_y * pig.fspeed,
            active = true
         }
      )
      add(objs,ncoin)
      for i = 1,8 do
         local r = (rnd() - .5) / 3
         local dx,dy = rot_vec(pig.aim_x,pig.aim_y,r)
         local s = pig.fspeed * rnd()
         local ncoin = clone(min_coin,{x=nx,y=ny,dx=dx*s,dy=dy*s,timer=rnd()*32})
         add(objs,ncoin)
      end
      for i=1,16 do
         local r = rnd()
         local dx,dy = rot_vec(1,0,r)
         local s = rnd() * .5
         local ncoin = clone(min_coin,{x=nx,y=ny,dx=dx*s,dy=dy*s,timer=rnd()*32})
         add(objs,ncoin)
       end
   end
end

function pig_auto_strafe(obj)
end
//prototypes///////////////////////
cam = {
   x = 64,
   y = 64
}

coin = {
   sprite = 39,
   id = 'coin',
	x = 0,
   dx = 0,
   rx = .95,
	y = 1,
   dy = -1,
   ry = .95,
   r = 4,
   mv = 1,
   fys = true,
   kin = true,
   grav = true,
   act = ctrl_coin,
   active = true
}

l_coin = clone(
   coin,
   {
      grav = false,
      rx = 1,
      ry = 1,
      timer = 32,
      act = function() end,
      update = l_coin_update
   }
)

min_coin = clone(
   coin,
   {
      timer = 32,
      active = false,
      update = min_coin_update,
      sprite = 43,
   }
)
pig = {
   sprite = 1,
   view = true,
   x = 0,
   dx = 0,
   rx = 1,
   y = 0,
   dy = 0,
   ry = 0,
   r = 8,
   aim_x = 1,
   aim_y = 0,
   act = pig_fire,
   fspeed = 2, 
   catch = pig_catch
}

ur_pig = clone(pig,{sprite=13,aim_x = sqrt(2)/2,aim_y=-sqrt(2)/2})
ul_pig = clone(pig,{sprite=33,aim_x = -sqrt(2)/2,aim_y=-sqrt(2)/2})
dl_pig = clone(pig,{sprite=35,aim_x = -sqrt(2)/2,aim_y=sqrt(2)/2})
dr_pig = clone(pig,{sprite=37,aim_x = sqrt(2)/2,aim_y=sqrt(2)/2})
u_pig = clone(pig,{sprite=5,aim_x = 0,aim_y=-1})
l_pig = clone(pig,{sprite=11,aim_x = -1,aim_y=0})
d_pig = clone(pig,{sprite=7,aim_x = 0,aim_y=1})
r_pig = cpy(pig)

pig_lut = {r_pig, l_pig, u_pig, d_pig, ur_pig, dr_pig, dl_pig, ul_pig}

//drawing////////////////////////////////////// 
function future_draw(obj, n)
   local obj_cpy = cpy(obj)
   for i=1,n do 
      move_obj(obj_cpy)
      circfill(obj_cpy.x,obj_cpy.y,.5,7)
   end
end 

function cam_coords(obj)
   local nx = (obj.x + (obj.dx * 0))
   local ny = (obj.y + (obj.dy * 0))
   return nx,ny
end

function aim_cam(cam,obj,bias)
   if not obj.view then 
      return
   end
   local nx = flr((cam.x*(bias-1) + obj.x) / bias)
   local ny = flr((cam.y*(bias-1) + obj.y) / bias)
   cam.x,cam.y = nx,ny
end

function set_cam(cam)
   camera(cam.x-64,cam.y-64)
end

function coin_draw(coin)
   local s = flr(clock/4) % 4
   spr(s + coin.sprite,coin.x-coin.r,coin.y-coin.r)
end

function pig_draw(pig)
   local x = ((pig.sprite*8) % 8*16) + 8
   local y = flr(pig.sprite / 16)*8
   local sx = 2*cos(clock/100)*pig.aim_x
   local sy = 2*cos(clock/100)*pig.aim_y
   //sspr(x,y,16,16,pig.x-pig.r,pig.y-pig.r,16-cos(clock/100)*2,16+cos(clock/100)*2)
   sspr(x,y,16,16,pig.x-pig.r-sx/2,pig.y-pig.r-sy/2,16+sx,16+sy)
end

//main////////////////////////////////
function _init()
   music(0)
   objs = {}
   local coin = cpy(coin)
   add(objs,coin)
   objs.active = objs[1]
   for x=1,128 do
      for y=1,128 do
         local d = mget(x-1,y-1) - 63
         if pig_lut[d] then
            local pg = cpy(pig_lut[d])  
            pg.x = x * 8
            pg.y = y * 8
            add(objs, pg)
         end
      end
   end
   objs.cam = cpy(cam)
   clock = 0
end

function _update60()
   clock += 1
   col_objs(objs) 
   objs.active:act()
   for obj in all(objs) do
      if obj.fys then
         move_obj(obj)
      end
      if obj.update then
         obj:update()
      end
      if obj.active and objs.active ~= obj then
         objs.active.active = false
         objs.active = obj
      end
      if obj.dead then
         del(objs,obj)
      end
   end
end

function _draw()
   cls()
   //grid_lines(16,-nx,-ny) 
   camera()
   print(flr(objs.active.x))
   print(flr(objs.active.y))
   aim_cam(objs.cam,objs.active,3)
   set_cam(objs.cam)
   for obj in all(objs) do
      if obj.id then
         coin_draw(obj) 
      else
         pig_draw(obj)
         //sspr(8,0,16,16,obj.x-obj.r,obj.y-obj.r,16-cos(clock/100)*2,16+cos(clock/100)*2)
      end
   end
   //camera()
end
__gfx__
00000000000000000000000000000000000000000000000000000000000000eeee00000000000000000000000000000000000000000000000000000000000000
000000000000eeeeeeee00000000eeeeeeee000000000f2222f000000000eeeeeeee000000000000000000000000000000000000000000000000000000000000
0070070000eee2222eeeee0000eeeee2222eee0000000ffffff00000000eeeeeeeeee0000000eeee0000000000000000eeee00000000000000f0000000000000
000770000eeeeeeeeeeeeee00eeeeeeeeeeeeee0000000ffff000000000eeeee2eeee00000eeeeeeee000000000000eeeeeeee000000000000f2000000000000
00077000eeeeeeeeee0eee0ee0eee0eeeeeeeeee00000eeeeee0000000eeeeee2eeeee000eeeeeeee0e0000000000e0eeeeeeee00000eeee0fff200000000000
00700700eeee222eeeeeeeeeeeeeeeeee222eeee0000eeeeeeee000000eeeeee2eeeee000eeeeeeee0ee0ff00ff0ee0eeeeeeee000eeee0eeeffff0000000000
00000000eee2eee2eeeffffeeffffeee2eee2eee000e00eeee00e00000eeeeee2eeeee00eeeeeeeeeeeeff2002ffeeeeeeeeeeee0eeeeee0eeef000000000000
00000000eee2eeeeeeef2f2ee2f2feeeeeee2eee000eeeeeeeeee00000eeeeee2eeeee00eee22222eeeeff2002ffeeee22222eee0eeeeeeeeee0000000000000
00000000eee2eee2eeeffffeeffffeee2eee2eee00eeeee2eeeeee00000eeeeeeeeee000eeeeeeeeeeeeff2002ffeeeeeeeeeeeeeeeeee2ee0ee000000000000
e222eee0eeee222eeeeeeeeeeeeeeeeee222eeee00eeeee2eeeeee00000e00eeee00e000eeeeeeeeeeeeff2002ffeeeeeeeeeeeeeeeee2eeee0e000000000000
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00eeeee2eeeeee000000eeeeeeee00000eeeeeeee0ee0ff00ff0ee0eeeeeeee0eeee2eeeeeee000000000000
eeeee0eeeeeeeeeeeeeeeee00eeeeeeeeeeeeeee00eeeee2eeeeee0000000eeeeee000000eeeeeeee0e0000000000e0eeeeeeee0eee2eeeeeeee000000000000
eeeeeeee0eeeeeeeeeeeee0000eeeeeeeeeeeee0000eeee2eeeee000000000ffff00000000eeeeeeee000000000000eeeeeeee000eeeeeeeeee0000000000000
eeeeeeee0eeeeeeeeeeee000000eeeeeeeeeeee0000eeeeeeeeee00000000ffffff000000000eeee0000000000000000eeee00000eeeeeeeeee0000000000000
eeeeeee000ee022000ee00000000ee000220ee000000eeeeeeee000000000f2222f000000000000000000000000000000000000000eeeeeeee00000000000000
0e00e00000000000000000000000000000000000000000eeee0000000000000000000000000000000000000000000000000000000000eeee0000000000000000
00000000000000000000000000000000eeee00000000eeee0000000000aaaa00000a9000000a90000009a0000000000000000000000000000000000000000000
000000000000000000000000000000eeeeeeee0000eeeeeeee0000000a99999000a99400000a900000999a000000000000000000000000000000000000000000
0000000000000f000000000000000eeeeeeeeee00eeeeeeeeee00000a99aaa940aa9994000aaa90004999aa00007700000077000000070000007700000000000
0000000000002f000000000000000eeeeeeeeee00eee2eeeeee00000a99a99940aa9a94000aaa900049a9aa00076650000076000000060000006700000000000
000000000002fff0eeee00000000eeeeeeee2eeeeeeee2eeeeee0000a99a99940aa9a94000aaa900049a9aa00076650000076000000060000006700000000000
0000000000ffffeee0eeee000000eeeeeee2eeeeeeeeee2eeeee0000a99a99940aa9a94000aaa900049a9aa00005500000075000000050000005600000000000
000000000000feee0eeeeee00000e0eeee2eeeeeeeeeeee2ee0e00000499994000a99400000a900000499a000000000000000000000000000000000000000000
0000000000000eeeeeeeeee00000ee0ee2eeeeeeeeeeeeeee0ee00000044440000094000000a9000000490000000000000000000000000000000000000000000
000000000000ee0eeeeeeeee00000eeeeeeeeee00eeeeeeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000e0ee2eeeeeee0000feee0eeeeee00eeeeee0eeef0000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000eeeee2eeeeee00ffffeee0eeee0000eeee0eeeffff00000000000000000000000000000000000000000000000000000000000000000000000000
000000000000eeeeee2eeeee0002fff0eeee00000000eeee0fff2000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000eeeeee2eee000002f00000000000000000000f20000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000eeeeeeeeee000000f00000000000000000000f00000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000eeeeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000eeee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000aa000000000000000aaaa0000000000000000aaaa00000000000000000000000000000000000000000000000000000000000000000000
00000a0000a0000000aaaa00000aa00000000aaa00a0000000000a00aaa000000000000000000000000000000000000000000000000000000000000000000000
00000aa00aa000000aaaaaa0000000000000a0aa0a0a00000000a0a0aa0a00000000000000000000000000000000000000000000000000000000000000000000
0a0a0aaaaaa0a0a000000000000aa000000a0a0a00a0a000000a0a00a0a0a0000000000000000000000000000000000000000000000000000000000000000000
0a0a0aaaaaa0a0a0000aa0000000000000a0a000000a0a0aa0a0a000000a0a000000000000000000000000000000000000000000000000000000000000000000
00000aa00aa00000000000000aaaaaa00a0a00000000a0aaaa0a00000000a0a00000000000000000000000000000000000000000000000000000000000000000
00000a0000a00000000aa00000aaaa0000a0000000000aaaaaa0000000000a000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000aa000000000000000aaaaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000041000000000047000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000004000000000400000000000000000000044000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0108000024053000000c0230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010800002457030570005002452030520005002451030510005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000000000000000000000
010800002957037570000002952037520000002951037510000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010c00200035000354073500030000350003000030000300003500035407350003000035000300003000030006350003000235000300053500030003350003000035000354073500030000350003000000000000
010c00201f1601f1621f1621f1621f1521f1521f1421f1421f1321f1321f1221f1221f1121f1121f1121f1121a1621d1621e1621e1621e1521e1521e1421e1421e1321e1321e124001001e164001001e1641e150
010c00000035000354073500030000350003000030000300063500635402350003000535000300003000030006350003000235000300053500030003350003000035001350073500030001350000000000000000
010c00001f1601f1521f1421f1421f1621f1521f1421f1421f1321f1321f1221f1222116221152211521f1521e1621e1621e1621e1621e1521e1521e1421e1421e1321e1321e150001001e160001001e1601e150
010c00000c0730000018153181030c073000000c003000000c073000000c003000000c0730000018153000000c0730000000000000000c0730000000000000000c0730000018153000000c073000000000000000
010c0000181621d1611e1621e1621e1521e1521e1421e1421e1321e1321e1221e1221e1121e1121e1121e1121a1621a1621a1621a1621a1521a1521a1421a1421716217132171240010017164001001716417150
__music__
01 10511444
00 12531444
00 10511444
00 10551444
00 10111444
00 12131444
00 10111444
02 10151444

